{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortByAlphabet","ALPHABET","sortByLength","LENGTH","reset","this","goods","visibleGoods","sort","good","nextGood","localeCompare","length","getReorderedGoods","className","type","classNames","onClick","map","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,eAAiB,WACf,EAAKD,SAAS,CACZH,SAAUL,EAASU,YAdzB,EAkBEC,aAAe,WACb,EAAKH,SAAS,CACZH,SAAUL,EAASY,UApBzB,EAwBEC,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EAnEH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNY,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAMC,GACvB,OAAQd,GACN,KAAKL,EAASU,SACZ,OAAOQ,EAAKE,cAAcD,GAE5B,KAAKnB,EAASY,OACZ,OAAOM,EAAKG,OAASF,EAASE,OAEhC,KAAKrB,EAASM,KACd,QACE,OAAO,MAITF,GACFY,EAAaT,UAGRS,EA0CSM,CAAkBrB,EAAiBa,KAAKX,OAEtD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,WAAYpB,IAAaL,EAASU,WACtCgB,QAASZ,KAAKL,eAJhB,iCASA,wBACEe,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYpB,IAAaL,EAASY,SACtCc,QAASZ,KAAKH,aAJhB,4BASA,wBACEa,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,YAAarB,IACjBsB,QAASZ,KAAKP,QAJhB,sBASEF,IAAaL,EAASM,MAAQF,IAE5B,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASZ,KAAKD,MAHhB,sBAUN,6BACE,6BACGE,EAAMY,KAAI,SAAAT,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,iBAlFrB,GAAyBU,aC5DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f2e71f6b.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good, nextGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good.localeCompare(nextGood);\n\n      case SortType.LENGTH:\n        return good.length - nextGood.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ninterface State {\n  isReversed: boolean,\n  sortType: SortType,\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET })}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success',\n              { 'is-light': sortType !== SortType.LENGTH })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning',\n              { 'is-light': !isReversed })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li\n                key={good}\n                data-cy=\"Good\"\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}